C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE source\main.c BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\list\main.lst
                    -) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <adc.h>
   3          #include <displayer.h>
   4          #include <beep.h>
   5          #include <key.h>
   6          #define uint unsigned int
   7          #define uchar unsigned char
   8          
   9          #define Sysclk 11059200L
  10          #define Baudrate 9600
  11          
  12          xdata uint speed[6] = {1000,900,800,700,600,500}; 
  13          
  14          xdata uint reset[15]={0,1908,1701,1515,1433,1276,1136,1012,956,852,759,716,638,568,506};       // ????
  15                        //0   1    2    3    4    5    6    7    1  2   3   4   5   6   7  
  16          xdata uchar music[204]={10,1, 10,1, 10,1, 10,1, 12,1, 12,3, 9,1, 9,1, 10,1, 9,1.5,  8,1, 8,1, 8,1, 8,1, 8,
             -1, 10,2, 10,1, 10,1, 11,2, 10,3,
  17                                  0,1, 8,1, 8,1, 9,1, 8,1, 9,2, 0,1, 8,1, 8,2, 6,1, 6,1, 5,3, 0,1, 9,1, 9,1, 10,1, 1
             -1,1, 11,2, 0,1, 9,1, 8,1, 10,1, 9,0.5, 9,2, 0,1,
  18                        10,1, 10,1, 10,1, 10,1, 12,1, 12,3, 0,4, 10,1, 10,1, 12,1, 12,2,  10,1.5, 0,6, 8,1, 8,1, 8,1, 8,1
             -, 8,1, 10,2, 10,1, 0,1, 10,1, 10,1, 10,2, 10,1, 
  19                        10,1, 11,1, 10,4, 0,2,  8,1, 8,1, 9,1, 8,1, 8,2, 6,1.5, 8,1,  8,2, 6,1, 5,3, 0,2, 9,1, 9,1, 10,1,
             - 11,1, 11,2, 0,1, 10,1, 9,1, 8,1,10,1, 9,1  };
  20                                             //
  21          sbit LED_SEL = P2^3;
  22          sbit key1 = P3 ^ 2;
  23          sbit key2 = P3 ^ 3;
  24          sbit beep=P3^4;   // ???
  25            
  26          //??????
  27          xdata uchar arrSegSelect[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39
             -, 0x5e, 0x79, 0x71, 0x00};
  28          xdata uchar arrDigitSelect[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07};   //?????
  29          xdata uchar idf;
  30          xdata uint time;
  31          xdata uint cntKey;
  32          xdata uint cntMusic;
  33          xdata uint delayMusic;
  34          xdata int adc_value;
  35          xdata int foodTemp;
  36          //?????????
  37          xdata int isStart;
  38          xdata int isEdge;
  39          xdata int isPress; //????????,?????
  40          xdata int musicFlag = 0;
  41          xdata int moveFlag = 0;
  42          //??snake?????,??
  43          xdata int x[50], oldX[50];
  44          xdata int y[50], oldY[50];
  45          xdata int len = 3;
  46          xdata int dir = 1;    //????  0 1 2 3
  47          xdata int cntScore = 0;
  48          xdata int addScore = 1;
  49          xdata int foodX[2];
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 2   

  50          xdata int foodY[2];
  51          xdata uchar rdata = 0x00;
  52          xdata uint curSpeed;
  53          xdata uint rdataTemp;
  54          xdata int displayOld;
  55          
  56          
  57          //???????
  58          void delay_ms(uint n);    //????  ???ms
  59          void snakeInit();
  60          void paintSnake();
  61          void ADCInit();
  62          void time0Init();
  63          void primeEdge();
  64          void makeFood();
  65          void paintFood();
  66          void eatFood();
  67          void primeHeader();
  68          void Delay100us();
  69          void time1Init();
  70          void paintScore();
  71          void play();
  72          void playMove();
  73          void changeSpeed();
  74          void Uart_Init();
  75          void Uart2_process();
  76          
  77          
  78          
  79          
  80            
  81          
  82          void Init() {
  83   1          AdcInit();
*** WARNING C209 IN LINE 83 OF source\main.c: '_AdcInit': too few actual parameters
  84   1          DisplayerInit();
  85   1          BeepInit();
  86   1          Key_Init();
*** WARNING C206 IN LINE 86 OF source\main.c: 'Key_Init': missing function-prototype
  87   1          MySTC_Init();     
*** WARNING C206 IN LINE 87 OF source\main.c: 'MySTC_Init': missing function-prototype
  88   1        while(1)              
  89   1          { MySTC_OS();    
*** WARNING C206 IN LINE 89 OF source\main.c: 'MySTC_OS': missing function-prototype
  90   2          }  
  91   1        
  92   1        
  93   1        
  94   1        
  95   1        
  96   1        
  97   1        
  98   1        
  99   1        
 100   1        
 101   1        
 102   1        
 103   1        
 104   1      
 105   1        
 106   1        //???  ??????
 107   1        P0M1 = 0x00;
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 3   

 108   1        P0M0 = 0xff;
 109   1        P2M1 = 0x00;
 110   1        P2M0 = 0x08;
 111   1        P3M0=0x10;                //????
 112   1        P3M1=0x00;
 113   1        EA = 1;  //??????????
 114   1        time0Init();  
 115   1        time1Init();
 116   1        ADCInit();
 117   1        Uart_Init();
 118   1        snakeInit();  
 119   1        //????
 120   1        foodX[0] = 0;
 121   1        foodX[1] = 1;
 122   1        foodY[0] = 1;
 123   1        foodY[1] = 1;
 124   1        
 125   1        //?????????,???????????
 126   1        isStart = 1;
 127   1        isEdge = 0;
 128   1        isPress = 0;
 129   1        beep = 0;
 130   1        cntMusic = 0;
 131   1        delayMusic = 0;
 132   1        displayOld = 1;
 133   1        curSpeed = speed[0];
 134   1      }
 135          void start(){
 136   1        //
 137   1        makeFood();
 138   1        while(1){
 139   2          if(isStart){
 140   3            paintSnake();
 141   3            paintFood();
 142   3          }else{
 143   3            //paintSnake();
 144   3            //??????
 145   3            if(isEdge){
 146   4              for(idf = 0; idf <= len; idf++){
 147   5              x[idf] = oldX[idf];
 148   5              y[idf] = oldY[idf];
 149   5            }   
 150   4            }     
 151   3             
 152   3            
 153   3            
 154   3            play();
 155   3            
 156   3            
 157   3        } 
 158   2      }
 159   1      }
 160          
 161          void ADC_Handler() interrupt 5{
 162   1        //????flag ,?????
 163   1        ADC_CONTR &= 0xEF;   //(1110 1111)  flag ?? 
 164   1      }
 165          
 166          
 167          
 168          void time1() interrupt 3{
 169   1        beep = ~beep;
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 4   

 170   1      }
 171          
 172          //********************************************????,???????????
 173          /**************?????????**************/
 174          void time0() interrupt 1{
 175   1        TH0 = 0xfc;
 176   1        TL0 = 0x18;   
 177   1        
 178   1        
 179   1        //????
 180   1        if(time == curSpeed){  //????, ?????????,???????
 181   2            //????,???????????
 182   2         primeEdge();
 183   2        //????????
 184   2          primeHeader();
 185   2          
 186   2        }
 187   1           
 188   1        
 189   1        if(!isStart ){
 190   2          
 191   2          
 192   2          if( displayOld){ 
 193   3              paintSnake();
 194   3          }    
 195   2          if(time > 3000){
 196   3              displayOld = 0;
 197   3            }
 198   2          
 199   2          if( !displayOld && time >= 50 ){
 200   3            time = 0;
 201   3          //  paintSnake();
 202   3            paintScore();
 203   3          }
 204   2              //
 205   2        }
 206   1        
 207   1        //??????,??????   
 208   1        if(isStart){
 209   2          
 210   2          
 211   2          if(moveFlag){
 212   3            delayMusic++;
 213   3            if(delayMusic > 180){
 214   4              moveFlag = 0;
 215   4              delayMusic = 0;
 216   4              TR1 = 0;
 217   4            }
 218   3        } 
 219   2        
 220   2      
 221   2          
 222   2      //??????,????
 223   2        //??key1???,????????????
 224   2      
 225   2          if(isPress){    
 226   3            cntKey++;
 227   3            if(cntKey > 300){
 228   4              isPress = 0;
 229   4              cntKey = 0;
 230   4            } 
 231   3          }
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 5   

 232   2          if(time%50 == 0 && isPress == 0){ //???????, ???????0.2ms
 233   3            if(dir != 2 && key1 == 0 ){
 234   4                dir = 3;    
 235   4                isPress = 1;
 236   4            }else if(key2 ==0 && dir != 0){
 237   4              dir = 1;    
 238   4              isPress = 1;
 239   4            }
 240   3            //????mmp???, key??????????
 241   3            //??????,??????adc???key3
 242   3            else { 
 243   4                adc_value = -1;
 244   4                adc_value = ((ADC_RES & 0x03) << 8) | ADC_RESL;
 245   4                adc_value = adc_value >> 7;
 246   4            //1 ??  2 ??  3? ??
 247   4              if( adc_value == 3 && dir != 1){
 248   5                  dir = 0;
 249   5                isPress = 1;
 250   5              } else if( adc_value == 0 && dir != 3){
 251   5                dir = 2;
 252   5                isPress = 1;
 253   5              }
 254   4            //?????????,    ???? 1 ms??????
 255   4              
 256   4            //adc???500?????????,500/12M,?????
 257   4            //1ms??, ??????
 258   4              ADC_CONTR |= 0x08;        
 259   4          }
 260   3            
 261   3          }
 262   2          
 263   2          
 264   2          
 265   2          
 266   2        //?????????,???????????????
 267   2          if(time == curSpeed){
 268   3            
 269   3            uchar j;
 270   3            for(j = 0; j <=len; j++){
 271   4              oldX[j] = x[j];
 272   4              oldY[j] = y[j];
 273   4            }   
 274   3            eatFood();
 275   3            for(j = len; j > 0; j--){
 276   4                      x[j] = x[j-1];
 277   4                      y[j] = y[j-1];
 278   4            }
 279   3            if(dir == 3){   
 280   4                  x[0] += 1;     
 281   4            }else if(dir == 2){   
 282   4                  x[0] -= 1;      
 283   4            }else if(dir == 1){
 284   4                  y[0] += 1;    
 285   4            }else{      
 286   4                  y[0] -= 1;
 287   4            }       
 288   3            
 289   3            curSpeed = speed[rdataTemp];
 290   3            
 291   3              playMove();//?????
 292   3               time = 0;    
 293   3          }
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 6   

 294   2          
 295   2          
 296   2      }
 297   1       time++;  
 298   1      }
 299          
 300          
 301          
 302          //********************************************************???
 303          void main(){
 304   1             Init(); 
 305   1             start();
 306   1      }
 307          
 308          
 309          
 310          
 311          //***************************Init*************************???
 312          void snakeInit(){
 313   1            //???  ????
 314   1         //???????????????
 315   1          for(idf = 0; idf < 49; idf++){
 316   2                x[idf] = y[idf] = -1;   
 317   2            }
 318   1        x[0] = 3;
 319   1        x[1] = 2;
 320   1        x[2] = 1;
 321   1        x[3] = 0;
 322   1        y[0] = y[1] = y[2] = y[3]= 0; 
 323   1        len = 3;
 324   1        dir = 3;
 325   1      } 
 326          void time0Init(){   
 327   1        //???0 ????
 328   1        TMOD = 0x01;
 329   1        TH0 = 0xfc;
 330   1        TL0 = 0x18;
 331   1        TR0 = 1;
 332   1        
 333   1        ET0 = 1;
 334   1        time = 0;
 335   1      }
 336          void time1Init(){
 337   1        ET1 = 1;
 338   1          TR1=1;
 339   1      }
 340          
 341          
 342          void Uart_Init(){
 343   1          //AUXR = 0X80;
 344   1          S2CON = 0x50;  
 345   1          T2H = 65536 - (Sysclk / 4 / Baudrate) >> 8;
 346   1          T2L = 65536 - (Sysclk / 4 / Baudrate);
 347   1          IE2 |= 0x01;
 348   1          AUXR |= 0x10;
 349   1             
 350   1          ES = 1;    
 351   1            
 352   1      }
 353          
 354          
 355          void ADCInit(){
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 7   

 356   1          //  ADC ??? 
 357   1        P1ASF = 0x80;
 358   1        ADC_CONTR = 0x87; 
 359   1        //1000 0111 
 360   1        //ADC_POWER(0?)  SPEED1 SPEED0 ADC_FLAG       ADC_START CHS2 CHS1 CHS0
 361   1        //ADC_FLAG ?????   START ????1
 362   1        CLK_DIV |= 0x20; //??res???, resl ?
 363   1        EADC = 1; 
 364   1          
 365   1      }
 366          
 367          
 368          
 369          //**************************************????***************
 370          
 371          void primeHeader(){
 372   1        //?????????????
 373   1        for(idf = 1; idf < len ; idf ++){
 374   2          if(x[0] == x[idf] && y[0] == y[idf]){
 375   3            isStart = 0;
 376   3            break;
 377   3          } 
 378   2        }
 379   1      }
 380          
 381          
 382          void changeSpeed(){
 383   1        
 384   1        if(~rdata&1){
 385   2         rdataTemp = 0;
 386   2        }else if(~rdata&(1<<1)){
 387   2         rdataTemp = 1;
 388   2        }else if(~rdata&(1<<2)){
 389   2         rdataTemp = 2;
 390   2        }else if(~rdata&(1<<3)){
 391   2         rdataTemp = 3;
 392   2        }else if(~rdata&(1<<4)){
 393   2         rdataTemp = 4;
 394   2        }else if(~rdata&(1<<5)){
 395   2         rdataTemp = 5;
 396   2        } 
 397   1          
 398   1      }
 399          
 400          
 401          
 402          
 403          
 404          void primeEdge(){
 405   1        //???????,???,????
 406   1        for(idf = 0; idf <= len ; idf ++){
 407   2          if(x[idf] < 0 || x[idf] > 8 || y[idf] <0 || y[idf] > 2){
 408   3            isStart = 0;
 409   3            isEdge = 1;
 410   3            break;
 411   3          } 
 412   2        }
 413   1      }
 414          void paintScore(){
 415   1            P0 = 0;
 416   1            P2 = arrDigitSelect[cntScore];  
 417   1            P0 = arrSegSelect[len];
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 8   

 418   1      }
 419          void play() {
 420   1        
 421   1          if(reset[music[cntMusic]]!=0)          //?????0?????,?????0???,???????????????
 422   1        {
 423   2        TR1=1;                 
 424   2        TH1=(65536-reset[music[cntMusic]])/256;
 425   2        TL1=(65536-reset[music[cntMusic]])%256;
 426   2        }
 427   1        else{TR1=0;}             
 428   1        delay_ms(180*music[++cntMusic]);               //??????????
 429   1        TR1=0;
 430   1        delay_ms(60*music[cntMusic]);          //???????????
 431   1        cntMusic++;
 432   1        if(cntScore <= 0){
 433   2          addScore = 1;
 434   2        }
 435   1        if(cntScore >= 7){
 436   2          addScore = 0;
 437   2        }
 438   1        if(addScore)
 439   1        cntScore++;
 440   1        else cntScore--;
 441   1          if(cntMusic==204)              //??????5s ??????
 442   1        {cntMusic=0;delay_ms(5000);}
 443   1        
 444   1        
 445   1      
 446   1      //  if(!musicFlag){
 447   1          //  TR1=1;
 448   1          //TH1=(65536-reset[music[cntMusic]])/256;  //
 449   1          //TL1=(65536-reset[music[cntMusic]])%256; 
 450   1        //  musicFlag = 1;  
 451   1        //}
 452   1      }
 453          
 454          
 455          void playMove(){
 456   1        if(!moveFlag){
 457   2          TR1=1;
 458   2          TH1=(65536-reset[music[3]])/256;  //
 459   2          TL1=(65536-reset[music[3]])%256; 
 460   2          moveFlag = 1; 
 461   2        }
 462   1      }
 463          void makeFood(){
 464   1        //?????????,????????????
 465   1        //??????????  ^_^
 466   1        int tempflag = 0;
 467   1        while(1){   
 468   2          int tempy = TH0 % 3;
 469   2          int tempx = TL0 % 9;
 470   2          int tempdir = (TH0 >> 2) % 2;  //0 ???? 1????
 471   2          //????????????
 472   2          for(idf = 0; idf < len; idf++){
 473   3            if(x[idf] - x[idf+1] > 0 ){
 474   4              if(dir == 0 && tempx == x[idf+1] && tempy == y[idf+1]){     
 475   5                break;
 476   5              }
 477   4            }else if(x[idf] - x[idf+1] < 0){
 478   4              if(dir == 0 && tempx == x[idf] && tempy == y[idf]){
 479   5                break;
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 9   

 480   5              }   
 481   4            }else if(y[idf] - y[idf+1] > 0){
 482   4               if(dir == 1 && tempx == x[idf+1] && tempy == y[idf+1] ){       
 483   5                 break;
 484   5               }      
 485   4            }else if(y[idf] - y[idf+1] < 0){
 486   4               if(dir == 1 && tempx == x[idf] && tempy == y[idf] ){     
 487   5                 break;
 488   5               }      
 489   4            }
 490   3            if(idf = len - 1){
 491   4              if(!( dir == 0 && tempx == 8) && !(dir == 1&& tempy == 2)){
 492   5                 tempflag = 1;        
 493   5              }
 494   4            } 
 495   3          } 
 496   2          if(tempflag == 1){
 497   3            foodX[0] = tempx; 
 498   3            foodX[1] = dir == 0? tempx : tempx + 1;
 499   3            foodY[0] = tempy;
 500   3            foodY[1] = dir == 1? tempy : tempy + 1;
 501   3             break;
 502   3          } 
 503   2        }
 504   1      }
 505          void eatFood(){
 506   1        uchar j;
 507   1           //?????
 508   1            if(x[0] == foodX[0] && y[0] == foodY[0]){
 509   2              if(dir == 3 && foodX[1] - foodX[0] == 1){
 510   3                len += 1;
 511   3                for(j = len; j > 0; j--){
 512   4                    x[j] = x[j-1];
 513   4                     y[j] = y[j-1];
 514   4                }
 515   3                x[0] += 1;
 516   3                makeFood();
 517   3                }   
 518   2            }
 519   1            if(x[0] == foodX[1] && y[0] == foodY[0]){  //?????
 520   2              if(dir == 2 && foodX[1] - foodX[0] == 1){
 521   3                len += 1;
 522   3                for(j = len; j > 0; j--){
 523   4                    x[j] = x[j-1];
 524   4                     y[j] = y[j-1];
 525   4                }
 526   3                x[0] -= 1;
 527   3                makeFood();
 528   3                }     
 529   2            }
 530   1        
 531   1      }
 532          
 533          void paintFood(){
 534   1        P0 = 0;
 535   1        foodTemp = 0;
 536   1        if(foodX[0] - foodX[1] == 0 && foodX[0] != 0){
 537   2          foodTemp += foodY == 0 ? (1<<5) : (1<<4);
 538   2          P2 = arrDigitSelect[foodX[0]-1];  
 539   2        }else{  
 540   2            if(foodX[0] - foodX[1] == 0 && foodX[0] == 0){
 541   3              foodTemp += foodY == 0 ? (1<<5) : (1<<4); 
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 10  

 542   3            }else {
 543   3                    if(foodY[0] == 0) foodTemp += 1;
 544   3                    else if(foodY[0] == 1) foodTemp += (1<<6);
 545   3                    else if(foodY[0] == 2) foodTemp += (1<<3);   //??else??????
 546   3            }         
 547   2            P2 = arrDigitSelect[foodX[0]];    
 548   2        }
 549   1        P0 = foodTemp;
 550   1        Delay100us();
 551   1        //delay_ms(1);
 552   1      }
 553          void paintSnake() {
 554   1          uchar temp,i,j;
 555   1          for(i = 0;i < 8; i++) {
 556   2            P0 = 0;
 557   2            P2 = arrDigitSelect[i]; 
 558   2            temp = 0;
 559   2            for(j = 0; j <= len; j++) {
 560   3              if(x[j] ==i && y[j] == 0) {
 561   4                if(j - 1 >= 0 && x[j-1] == i+1 && y[j-1] == 0) {
 562   5                  temp += 1;
 563   5                } else if(j + 1 <= len && x[j+1] == i+1 && y [j+1] == 0) {
 564   5                  temp += 1;
 565   5                }
 566   4              }
 567   3              if(i == 7 &&x[j] ==i + 1 && y[j] == 0) {
 568   4                if(j - 1 >= 0 && x[j-1] == i+1 && y[j-1] == 1) {
 569   5                  temp += (1<<1);
 570   5                } else if(j + 1 <= len && x[j+1] == i+1 && y [j+1] == 1) {
 571   5                  temp += (1<<1);
 572   5                }
 573   4              }
 574   3              if(i == 7 && x[j] ==i + 1 && y[j] == 1) {
 575   4                if(j - 1 >= 0 && x[j-1] == i+1 && y[j-1] == 2) {
 576   5                  temp += (1<<2);
 577   5                } else if(j + 1 <= len && x[j+1] == i+1 && y [j+1] == 2) {
 578   5                  temp += (1<<2);
 579   5                }
 580   4              }
 581   3              if(x[j] ==i + 1 && y[j] == 2) {
 582   4                if(j - 1 >= 0 && x[j-1] == i && y[j-1] == 2) {
 583   5                  temp += (1<<3);
 584   5                } else if(j + 1 <= len && x[j+1] == i && y [j+1] == 2) {
 585   5                  temp += (1<<3);
 586   5                }
 587   4              }
 588   3              if(x[j] ==i  && y[j] == 2) {
 589   4                if(j - 1 >= 0 && x[j-1] == i  && y[j-1] == 1) {
 590   5                  temp += (1<<4);
 591   5                } else if(j + 1 <= len && x[j+1] == i && y [j+1] == 1) {
 592   5                  temp += (1<<4);
 593   5                }
 594   4              }
 595   3              if(x[j] ==i  && y[j] == 1) {
 596   4                if(j - 1 >= 0 && x[j-1] == i && y[j-1] == 0) {
 597   5                  temp += (1<<5);
 598   5                } else if(j + 1 <= len && x[j+1] == i && y [j+1] == 0) {
 599   5                  temp += (1<<5);
 600   5                }
 601   4              }
 602   3              if(x[j] ==i  && y[j] == 1) {
 603   4                if(j - 1 >= 0 && x[j-1] == i+1 && y[j-1] == 1) {
C51 COMPILER V9.51   MAIN                                                                  09/01/2022 09:46:50 PAGE 11  

 604   5                  temp += (1<<6);
 605   5                } else if(j + 1 <= len && x[j+1] == i+1 && y [j+1] == 1) {
 606   5                  temp += (1<<6);
 607   5                }
 608   4              }
 609   3            } 
 610   2            
 611   2            P0 = temp;
 612   2            //????????1ms;
 613   2            //delay_ms(1);
 614   2            Delay100us();
 615   2          }
 616   1      }
 617          
 618          
 619          //***************************????***************
 620          //????  ???ms
 621          void delay_ms( uint n ) {
 622   1        while( n ) {
 623   2          uchar i, j;
 624   2          i = 11;
 625   2          j = 190;
 626   2          do {
 627   3            while ( --j );
 628   3          } while ( --i );
 629   2          n--;
 630   2        }
 631   1      }
 632          void Delay100us()   //@11.0592MHz
 633          {
 634   1        unsigned char i, j;
 635   1      
 636   1        i = 2;
 637   1        j = 15;
 638   1        do
 639   1        {
 640   2          while (--j);
 641   2        } while (--i);
 642   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4808    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    717    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
